{"version":3,"sources":["webpack:///path---blog-codewars-string-reordering-a41084f2f6d7ec06c7ca.js","webpack:///./.cache/json/blog-codewars-string-reordering.json"],"names":["webpackJsonp","769","module","exports","data","contentfulBlogPost","title","id","tags","publishDate","heroImage","file","url","body","childMarkdownRemark","html","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,oBAAsBC,MAAA,+BAAAC,GAAA,0BAAAC,MAAA,WAAAC,YAAA,iBAAAC,WAAqIC,MAAQC,IAAA,6GAAkHC,MAASC,qBAAuBC,KAAA,6xBAAmyBC,aAAgBC,KAAA","file":"path---blog-codewars-string-reordering-a41084f2f6d7ec06c7ca.js","sourcesContent":["webpackJsonp([192625416884362],{\n\n/***/ 769:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"[codewars] String Reordering\",\"id\":\"c7yuyCA8spyQ6Q2UO2gSQ0w\",\"tags\":[\"general\"],\"publishDate\":\"May 29th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/9b9aed31763f88e8668bb1a6a9e69236/codewars.jpg\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<p>The input will be an array of dictionaries.</p>\\n<p>Return the values as a string-seperated sentence in the order of their keys' integer equivalent (increasing order).</p>\\n<p>The keys are not reoccurring and their range is -999 &#x3C; key &#x3C; 999. The dictionaries' keys &#x26; values will always be strings and will always not be empty.</p>\\n<p>Example</p>\\n<pre><code>Input:\\nList = [\\n        {'4': 'dog' }, {'2': 'took'}, {'3': 'his'},\\n        {'-2': 'Vatsan'}, {'5': 'for'}, {'6': 'a'}, {'12': 'spin'}\\n       ]\\n\\nOutput:\\n'Vatsan took his dog for a spin'\\n</code></pre>\\n<p>My Answer</p>\\n<pre><code>function sentence(List) {\\n  return List.sort((curr, next) => Object.keys(curr)[0] - Object.keys(next)[0]).map(item => item[Object.keys(item)[0]]).join(' ');\\n}\\n</code></pre>\"}}}},\"pathContext\":{\"slug\":\"codewars-string-reordering\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-codewars-string-reordering-a41084f2f6d7ec06c7ca.js","module.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"[codewars] String Reordering\",\"id\":\"c7yuyCA8spyQ6Q2UO2gSQ0w\",\"tags\":[\"general\"],\"publishDate\":\"May 29th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/9b9aed31763f88e8668bb1a6a9e69236/codewars.jpg\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<p>The input will be an array of dictionaries.</p>\\n<p>Return the values as a string-seperated sentence in the order of their keys' integer equivalent (increasing order).</p>\\n<p>The keys are not reoccurring and their range is -999 &#x3C; key &#x3C; 999. The dictionaries' keys &#x26; values will always be strings and will always not be empty.</p>\\n<p>Example</p>\\n<pre><code>Input:\\nList = [\\n        {'4': 'dog' }, {'2': 'took'}, {'3': 'his'},\\n        {'-2': 'Vatsan'}, {'5': 'for'}, {'6': 'a'}, {'12': 'spin'}\\n       ]\\n\\nOutput:\\n'Vatsan took his dog for a spin'\\n</code></pre>\\n<p>My Answer</p>\\n<pre><code>function sentence(List) {\\n  return List.sort((curr, next) => Object.keys(curr)[0] - Object.keys(next)[0]).map(item => item[Object.keys(item)[0]]).join(' ');\\n}\\n</code></pre>\"}}}},\"pathContext\":{\"slug\":\"codewars-string-reordering\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-codewars-string-reordering.json\n// module id = 769\n// module chunks = 192625416884362"],"sourceRoot":""}