{"version":3,"sources":["webpack:///path---blog-year-to-century-5464e670af3b95be47e8.js","webpack:///./.cache/json/blog-year-to-century.json"],"names":["webpackJsonp","619","module","exports","data","contentfulBlogPost","title","publishDate","heroImage","file","url","body","childMarkdownRemark","html","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,oBAAsBC,MAAA,eAAAC,YAAA,iBAAAC,WAAmEC,MAAQC,IAAA,6GAAkHC,MAASC,qBAAuBC,KAAA,urBAA6rBC,aAAgBC,KAAA","file":"path---blog-year-to-century-5464e670af3b95be47e8.js","sourcesContent":["webpackJsonp([142161718297520],{\n\n/***/ 619:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"년도를 세기로 변환하기\",\"publishDate\":\"May 27th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/9b9aed31763f88e8668bb1a6a9e69236/codewars.jpg\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<h2>Introduction</h2>\\n<p>The first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.</p>\\n<h2>Task :</h2>\\n<p>Given a year, return the century it is in.</p>\\n<h2>Input , Output Examples ::</h2>\\n<pre><code>centuryFromYear(1705)  returns (18)\\ncenturyFromYear(1900)  returns (19)\\ncenturyFromYear(1601)  returns (17)\\ncenturyFromYear(2000)  returns (20)\\n</code></pre>\\n<h2>my answer</h2>\\n<pre><code>function century(year) {\\n  return Math.ceil(year / 100) > 0 ? Math.ceil(year / 100) : 1;\\n}\\n</code></pre>\\n<h2>Best Practices</h2>\\n<pre><code>const century = year => Math.ceil(year/100)\\n</code></pre>\"}}}},\"pathContext\":{\"slug\":\"year-to-century\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-year-to-century-5464e670af3b95be47e8.js","module.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"년도를 세기로 변환하기\",\"publishDate\":\"May 27th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/9b9aed31763f88e8668bb1a6a9e69236/codewars.jpg\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<h2>Introduction</h2>\\n<p>The first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.</p>\\n<h2>Task :</h2>\\n<p>Given a year, return the century it is in.</p>\\n<h2>Input , Output Examples ::</h2>\\n<pre><code>centuryFromYear(1705)  returns (18)\\ncenturyFromYear(1900)  returns (19)\\ncenturyFromYear(1601)  returns (17)\\ncenturyFromYear(2000)  returns (20)\\n</code></pre>\\n<h2>my answer</h2>\\n<pre><code>function century(year) {\\n  return Math.ceil(year / 100) > 0 ? Math.ceil(year / 100) : 1;\\n}\\n</code></pre>\\n<h2>Best Practices</h2>\\n<pre><code>const century = year => Math.ceil(year/100)\\n</code></pre>\"}}}},\"pathContext\":{\"slug\":\"year-to-century\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-year-to-century.json\n// module id = 619\n// module chunks = 142161718297520"],"sourceRoot":""}