{"version":3,"sources":["webpack:///path---blog-inline-vs-block-vs-inline-block-447732bf94457c791d9e.js","webpack:///./.cache/json/blog-inline-vs-block-vs-inline-block.json"],"names":["webpackJsonp","893","module","exports","data","contentfulBlogPost","title","id","publishDate","heroImage","file","url","body","childMarkdownRemark","html","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,oBAAsBC,MAAA,2CAAAC,GAAA,0BAAAC,YAAA,iBAAAC,WAA8HC,MAAQC,IAAA,0GAA+GC,MAASC,qBAAuBC,KAAA,g5BAAs5BC,aAAgBC,KAAA","file":"path---blog-inline-vs-block-vs-inline-block-447732bf94457c791d9e.js","sourcesContent":["webpackJsonp([183091159121840],{\n\n/***/ 893:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"inline vs block vs inline-block 차이점 알아보기\",\"id\":\"c36ScCfepSwQoyYIWsw6Yqm\",\"publishDate\":\"May 29th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/4SRJK3JXBCsWWAC44I084O/840ec7218ffecf9f3dae1cd26476d231/html5.png\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<h2>inline vs block vs inline-block 속성을 비교해보자.</h2>\\n<h3>display: inline ?</h3>\\n<p>대표적인 태그로는 span을 예로 들 수 있는데, text 크기만큼만 공간을 점유하고 줄바꿈을 하지 않는다.</p>\\n<ul>\\n<li>width/height 적용불가</li>\\n<li>margin/padding-top/bottom 적용불가</li>\\n<li>line-height를 원하는대로 사용할 수 없다.</li>\\n</ul>\\n<h3>display: block ?</h3>\\n<p>block 속성은 무조건 한줄을 점유하고 있고, 다음 태그는 무조건 줄바꿈이 적용된다. 대표적인 태그는 div가 있다.</p>\\n<h3>display: inline-block ?</h3>\\n<p>inline-block 속성은 inline 속성의 특징과 block 속성의 특징 둘 다 가지고 있는 속성이다. 기본적인 특징은 inline 속성과 비슷한데 (줄바꿈을 하지 않고, 동일한 라인에 작성가능) inline속성에서 할 수 없었던 width/height 변경 및 line-height를 커스텀하게 적용할 수 있는 특징이 있다.</p>\\n<ul>\\n<li>width/height 적용 가능 </li>\\n<li>margin/padding-top/bottom 적용 가능</li>\\n<li>line-height 적용 가능</li>\\n</ul>\\n<p>** 고려사항</p>\\n<ul>\\n<li>inline-block 사이에 공백이 생기게 되는데, parent 태그에 font-size: 0를 적용하면 해결된다.</li>\\n<li>inline-block 끼리 높이가 안맞을 때 상위 공백이 생기게 되는데 vertical-align: top을 적용하면 해결할 수 있다.</li>\\n</ul>\"}}}},\"pathContext\":{\"slug\":\"inline-vs-block-vs-inline-block\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-inline-vs-block-vs-inline-block-447732bf94457c791d9e.js","module.exports = {\"data\":{\"contentfulBlogPost\":{\"title\":\"inline vs block vs inline-block 차이점 알아보기\",\"id\":\"c36ScCfepSwQoyYIWsw6Yqm\",\"publishDate\":\"May 29th, 2018\",\"heroImage\":{\"file\":{\"url\":\"//images.ctfassets.net/hu4faubeotg0/4SRJK3JXBCsWWAC44I084O/840ec7218ffecf9f3dae1cd26476d231/html5.png\"}},\"body\":{\"childMarkdownRemark\":{\"html\":\"<h2>inline vs block vs inline-block 속성을 비교해보자.</h2>\\n<h3>display: inline ?</h3>\\n<p>대표적인 태그로는 span을 예로 들 수 있는데, text 크기만큼만 공간을 점유하고 줄바꿈을 하지 않는다.</p>\\n<ul>\\n<li>width/height 적용불가</li>\\n<li>margin/padding-top/bottom 적용불가</li>\\n<li>line-height를 원하는대로 사용할 수 없다.</li>\\n</ul>\\n<h3>display: block ?</h3>\\n<p>block 속성은 무조건 한줄을 점유하고 있고, 다음 태그는 무조건 줄바꿈이 적용된다. 대표적인 태그는 div가 있다.</p>\\n<h3>display: inline-block ?</h3>\\n<p>inline-block 속성은 inline 속성의 특징과 block 속성의 특징 둘 다 가지고 있는 속성이다. 기본적인 특징은 inline 속성과 비슷한데 (줄바꿈을 하지 않고, 동일한 라인에 작성가능) inline속성에서 할 수 없었던 width/height 변경 및 line-height를 커스텀하게 적용할 수 있는 특징이 있다.</p>\\n<ul>\\n<li>width/height 적용 가능 </li>\\n<li>margin/padding-top/bottom 적용 가능</li>\\n<li>line-height 적용 가능</li>\\n</ul>\\n<p>** 고려사항</p>\\n<ul>\\n<li>inline-block 사이에 공백이 생기게 되는데, parent 태그에 font-size: 0를 적용하면 해결된다.</li>\\n<li>inline-block 끼리 높이가 안맞을 때 상위 공백이 생기게 되는데 vertical-align: top을 적용하면 해결할 수 있다.</li>\\n</ul>\"}}}},\"pathContext\":{\"slug\":\"inline-vs-block-vs-inline-block\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-inline-vs-block-vs-inline-block.json\n// module id = 893\n// module chunks = 183091159121840"],"sourceRoot":""}